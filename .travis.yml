sudo: required
services:
- docker
language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- nvm install --lts
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker build -t swagger_server .
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag swagger_server juliuswagt/devops:swagger_server
- docker push juliuswagt/devops:swagger_server
env:
  global:
  - secure: cJffxstVDbL9dkak4WFbQTAX9swYAYAl/CWsXV2hiBhytsm2oyZEABpelHeJvMQ2JF37ws6TjSwKzlnl/hKOPwRFjhA6bTrbD8wdUtm6gRcvEf1aaOQ6/0ZRgXIo/sfrds3/kPoBDaAOh8/hCIB6GhKumteEepIIweu9k0Nl84LMyKShnYRZsnmONqRxylp5aK5LL8Ij48hNdKLEU+R7O3s5rCrrWtU1Q10WgN9kWRp8l4wqgmuIQmmjPSWNrj8SGbr7OCrzM+9xteryZzu0bY9fZX8PRS5c6zrMJoIs/m8vu9Ig4HB/8UbrNylSq5iMKr59bz9b0ZLARR6Oz2CGdgCvrPEzlgEppjWGUSwiSfV4uJfHS8Acq/1O2j1C+7R5B+4M3VnJSW6fjqqcldEZOXivJqJ6de/oWX0C7pF8gvYWn00d8cDcHO1zE5BqAXu3L7MSJM2byUUvaGVg87haoZCui+80LJapKQX6A4Rv3eOUrJreFYNoSWhpBwu7sQRUDWxC+TKlvo+qroAacAhlCA8kdAOFKqaPy796z6PNU39OVIF7po8Wefurz1OCNZyG5J4wsHu8zbugwLetu+qS3AuCS3lMy0z21RtBW8Rac7nH/WCoyKDQTMdh5T1CrycQDorF1i2l1ddTrRMCsAuCyiPaRhZXByfUouY0qL17oqk=
  - secure: jExOh4gS+/Q24i/TgKwfKtH9r/LNs6S22Z4i+jQ8joesesf4upW6JRJNzkWPYQoUEnjenBglTtwdfm2/fafDaZ3l9x/8YcdW9s44aimeUxdPX2aZRA6x98n4dZaUGIcnUM5ax1qzeZQC4XU+P/UKgGwOGC1q+f4EV5/nMmQkR7gl1/F3c9r/0ng+x4U3H97vWLAukcXsRcEHmeVnrYa8TAV/CmQpi1UIpci2U6QkGqqKwbwph8c0o8/dXNzUX3gGHb1oyPRt3WlHuofo0tkHTCo7ginHgzhcAo3OyIM8lQct+LE5luW1gTrZkcCwjiRDXIVUD12SLxtLKaAt9bO8cb09NuqoG3wf/0t6Dq27vNN4CcraMyQhtmFEiRih73ilMa11H9QsrI//CXbwaW/bqANYA43D+Vrj74B+hvGShfoZF53age/xp9afWiWfoUO/+U0ooHtu5LNAWyaMQg/aSXEn0ICWJ1Xz7uTO1VXIvTS5Txn1lHW3FN4LVRCHkKj/tHS34WUhTuIHqCdxou7Lp01WvT6aF7haXsSdfbFF8kJpVTcR3rezF1SlKGjsfC1jMwrgp5U85ozL6tanRkBtnqQvMNm4lKKVda/BemJzlFQeLjdPuV0pDH36yVb9E9EGR2F5Yvtkcpzu9zNDQZ27c/1dghHbxPCzsG/I7DoA4d4=
